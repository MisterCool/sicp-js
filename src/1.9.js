function inc(x) {
  return x + 1;
}
function dec(x) {
  return x - 1;
}

function plus(a, b) {
  return a === 0 ? b : plus(dec(a), inc(b));
}

function plus2(a, b) {
  return a === 0 ? b : inc(plus(dec(a), b));
}

module.exports = plus;
module.exports = plus2;


// Using the substitution model, illustrate the process generated by each function in evaluating plus(4,5) and plus2(4, 5);.
// Are these processes iterative or recursive?

// Используя подстановочную модель, объяснить: это процесс итеративный или рекурсивный.
// Что вообще тут происходит? Это функция сложения двух положительных целых чисел (по крайней мере А доложно быть положительным. Так выглядит снаружи, внутри она работает "хитрым образом". Рассмотрим оба способа.

// Plus
// При первом проходе А не равно 0, поэтому А уменьшается на еденицу (3), Б увеличивается на единицу (6)
// При втором проходе А = 2, Б = 7
// На терьем А = 1, Б = 8
// На четвертом А = 0, Б = 9
// На пятом А = 0, поэтому возвращается значение Б, равное 9
// выводы: А здесь используется как счетчик итераций, счетчик равный нулю - терминальное условние, в время которого Б, равное девяти есть ответ. Во первых нет отложенных вычеслений, во-вторых: есть счетчик и аккаумулятро. Поэтому функция plus работает итеративно.

//Plus2
// а === 0 используется как терминальное условие,
// plus2(4, 5); Тут 4 != 0, поэтому переходим к альтернатвному варианту тернарного оператора
// (inc(3 + 5)) опять не равно нулю, идем дальше...
// (inc(inc(2 + 5)))  дальше ...
// (inc (inc (inc (1 + 5))))  еще дальше
// (inc (inc (inc (inc (0 + 5))))) тут начинаем складывать отложенные операции, а именно: 5 нужно инкрементировать четыре раза
// (inc (inc (inc (inc 5))))
// (inc (inc (inc 6)))
// (inc (inc 7))
// (inc 8 )
// 9
// Вывод: отложенные операции, вложенноый рекурсивный вызов = рекурсивное выполнение
//
// Дополнително: замерил время (выдает все время разные результаты), однако рекурсивно чаще всего завершается быстрее http://i.imgur.com/AvFUyWZ.png

// plus 10 000: 1.233ms
// plus2 10 000: 1.183ms
//
// console.time('plus 10 000');
// plus(10000, 1);
// console.timeEnd('plus 10 000');
//
// console.time('plus2 10 000');
// plus2(10000, 1);
// console.timeEnd('plus2 10 000');
